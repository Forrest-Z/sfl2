# Copyright (c) 2005 CNRS/LAAS
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

prefix=		@prefix@
exec_prefix=	@exec_prefix@
top_builddir=	.
top_srcdir=	@top_srcdir@
srcdir=		@srcdir@

BINDIR=		@bindir@
LIBDIR=		@libdir@
INCLUDEDIR=	@includedir@/sfl

SHELL=          /bin/bash
AWK=            @AWK@
CC=		@CC@
CXX=		@CXX@
LIBTOOL=	@LIBTOOL@
INSTALL=	@INSTALL@
INSTALL_DATA=   $(INSTALL) -m644
MKINSTALLDIRS=	$(SHELL) $(srcdir)/mkinstalldirs

LTCC=		$(LIBTOOL) --mode=compile $(CC)
LTCXX=		$(LIBTOOL) --mode=compile $(CXX)
LTLD=		$(LIBTOOL) --mode=link $(CC)

CPPFLAGS=       -I$(top_builddir) \
                @BOOST_CPPFLAGS@ \
                @XCF_CPPFLAGS@ \
                -I$(prefix)/include
CFLAGS=         $(CPPFLAGS) @CFLAGS@
CXXFLAGS=       $(CPPFLAGS) @CXXFLAGS@

SHLIB_CURRENT=	2
SHLIB_REVISION=	0
SHLIB_AGE=	0
LIB=            libsunflower.la

# Depending on configure options, @WITH_XCF@ is either "XCF_" or
# "NOXCF_", in the former case this will lead to inclusion in the SRCS
# and HEADERS variables below.
@WITH_XCF@SRCS=    contrib/xcf_hal.cpp
@WITH_XCF@HEADERS= contrib/xcf_hal.h

SRCS=           $(XCF_SRCS) \
                util/Frame.cpp \
                util/Hull.cpp \
                util/Line.cpp \
                util/numeric.cpp \
                util/Point.cpp \
                util/Polygon.cpp \
                util/Ray.cpp \
                util/Pthread.cpp \
                api/Goal.cpp \
                api/MotionController.cpp \
                api/Multiscanner.cpp \
                api/Odometry.cpp \
                api/Pose.cpp \
                api/RobotModel.cpp \
                api/Scan.cpp \
                api/Scanner.cpp \
                api/Timestamp.cpp \
                bband/Bubble.cpp \
                bband/BubbleBand.cpp \
                bband/BubbleFactory.cpp \
                bband/BubbleList.cpp \
                bband/ReplanHandler.cpp \
                dwa/DistanceObjective.cpp \
                dwa/DynamicWindow.cpp \
                dwa/HeadingObjective.cpp \
                dwa/Lookup.cpp \
                dwa/Objective.cpp \
                dwa/SpeedObjective.cpp \
                expo/MotionController.cpp \
                expo/MotionPlanner.cpp \
                expo/MotionPlannerState.cpp \
                gplan/GridFrame.cpp \
                gplan/NF1.cpp \
                gplan/NF1Wave.cpp \
                cwrap/cwrapHAL.cpp \
                cwrap/expo.cpp \
                cwrap/sfl.cpp \
                cwrap/Handlemap.cpp \
		contrib/DummyHAL.cpp

HEADERS=        $(XCF_HEADERS) \
                util/array2d.hpp \
                util/vec2d.hpp \
                util/pdebug.hpp \
                util/Frame.hpp \
                util/functors.hpp \
                util/Hull.hpp \
                util/Line.hpp \
                util/numeric.hpp \
                util/Point.hpp \
                util/Polygon.hpp \
                util/Ray.hpp \
                util/Pthread.hpp \
                api/Goal.hpp \
                api/HAL.hpp \
                api/MotionController.hpp \
                api/MotionPlanner.hpp \
                api/Multiscanner.hpp \
                api/Odometry.hpp \
                api/Pose.hpp \
                api/RobotModel.hpp \
                api/Scan.hpp \
                api/Scanner.hpp \
                api/Timestamp.hpp \
                bband/Bubble.hpp \
                bband/BubbleBand.hpp \
                bband/BubbleFactory.hpp \
                bband/BubbleList.hpp \
                bband/ReplanHandler.hpp \
                dwa/DistanceObjective.hpp \
                dwa/DynamicWindow.hpp \
                dwa/HeadingObjective.hpp \
                dwa/Lookup.hpp \
                dwa/Objective.hpp \
                dwa/SpeedObjective.hpp \
                expo/MotionController.hpp \
                expo/MotionPlanner.hpp \
                expo/MotionPlannerState.hpp \
                gplan/GridFrame.hpp \
                gplan/NF1.hpp \
                gplan/NF1Wave.hpp \
                cwrap/Handlemap.hpp \
                cwrap/cwrapHAL.hpp \
                cwrap/expo.h \
                cwrap/hal.h \
                cwrap/sfl.h \
		contrib/DummyHAL.cpp

OBJS=           $(SRCS:%.cpp=%.lo)

VPATH=		@srcdir@


all: depend subdirs sfl $(LIB)

sfl:
	ln -s $(top_srcdir) sfl

subdirs:
	- mkdir util api bband cwrap dwa expo gplan contrib
	echo "subdirs created `date`" > subdirs

doc:
	mkdir -p html
	cp $(top_srcdir)/doxylogo.png html
	doxygen
	echo "doc build `date`" > doc

install:: all
	$(MKINSTALLDIRS) $(BINDIR) $(LIBDIR)
	$(LIBTOOL) --mode=install $(INSTALL) $(LIB) $(LIBDIR)

install:: sunflower.pc
	$(MKINSTALLDIRS) $(LIBDIR)/pkgconfig
	$(INSTALL) sunflower.pc $(LIBDIR)/pkgconfig

install::
	for header in $(HEADERS); do \
	  subdir=`dirname $$header`; \
	  $(MKINSTALLDIRS) $(INCLUDEDIR)/$$subdir; \
	  $(INSTALL_DATA) $(srcdir)/$$header $(INCLUDEDIR)/$$subdir; \
	done



$(LIB): $(OBJS)
	$(LTLD) -o $@ -rpath $(LIBDIR) -R$(LIBDIR) \
          -version-info $(SHLIB_CURRENT):$(SHLIB_REVISION):$(SHLIB_AGE) $(OBJS)

%.lo: %.c
	$(LTCC) $(CFLAGS) -o $*.o -c $<

%.lo: %.cpp
	$(LTCXX) $(CXXFLAGS) -o $*.o -c $<



distclean: clean
	rm -f Makefile Doxyfile sunflower.pc
	rm -rf util api bband cwrap dwa expo gplan contrib .libs

clean:
	rm -f depend redepend subdirs Makefile.depend sfl
	- $(LIBTOOL) --mode=clean rm -f $(OBJS) $(LIB)


depend:
	test -L sfl || ln -s $(top_srcdir) sfl
	rm -f Makefile.depend
	for source in $(SRCS); \
	  do \
	    subdir=`dirname $$source`; \
	    $(CC) -MM $(CPPFLAGS) $(top_srcdir)/$$source \
	      | $(AWK) -v subdir=$$subdir \
	'{if($$0~/^[^ ]/){sub(/o:/,"lo:"); print subdir "/" $$0} else print}' \
	     >> Makefile.depend; \
	done
	echo "depend built `date`" > depend

redepend:
	test -L sfl || ln -s $(top_srcdir) sfl
	rm -f Makefile.depend
	for source in $(SRCS); \
	  do \
	    subdir=`dirname $$source`; \
	    $(CC) -MM $(CPPFLAGS) $(top_srcdir)/$$source \
	      | $(AWK) -v subdir=$$subdir \
	'{if($$0~/^[^ ]/){sub(/o:/,"lo:"); print subdir "/" $$0} else print}' \
	     >> Makefile.depend; \
	done

sinclude Makefile.depend
